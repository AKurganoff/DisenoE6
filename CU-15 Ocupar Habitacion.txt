@startuml
title
  Diagrama_Secuencia_CU15
end title

actor Conserje
participant UI_OcuparHabitacion
participant GestorHabitacion
participant HabitacionDAO
participant GestorEstadia
participant EstadiaDAO

Conserje -> UI_OcuparHabitacion: Ocupar Habitaciones
activate UI_OcuparHabitacion
loop mientras se sigan cargando otras habitaciones
UI_OcuparHabitacion -> Conserje: Navegar a CU05 Mostrar Estado Habitaciones

opt no hay habitaciones disponibles
UI_OcuparHabitacion -> Conserje: mostrarMensaje(no hay habitaciones disponibles)
end

loop mientras el usuario presione "VOLVER" o no haya una habitacion disponible
  Conserje -> UI_OcuparHabitacion: seleccionHabitaciones(habitacion, fechaInicio, fechaFin)
  UI_OcuparHabitacion -> UI_OcuparHabitacion: verificar disponibilidad
  opt habitacion que no esta ni disponible ni reservada
    UI_OcuparHabitacion -> Conserje: Volver
  end
  opt habitacion disponible o reservada pero con algun dia de la estadia con el estado distinto a "reservada"
    UI_OcuparHabitacion -> Conserje: Volver
  end
  opt habitacion disponible o reservada pero con algun dia de la estadia con el estado "reservada"
    UI_OcuparHabitacion -> Conserje: mostrarMensaje("La habitacion esta ocupada, ¿Quiere ocuparla igual?")
    alt usuario presiona "OCUPAR IGUAL"
      Conserje -> UI_OcuparHabitacion: Ocupar igual
    else usuario presiona "VOLVER"
      Conserje -> UI_OcuparHabitacion: Volver
      end
  end
end

UI_OcuparHabitacion -> GestorHabitacion: pintarHabitacionesComoOcupadas(ListaHabitaciones)
activate GestorHabitacion
GestorHabitacion -> UI_OcuparHabitacion: retornar()
deactivate GestorHabitacion
UI_OcuparHabitacion -> Conserje: MostrarCartel("PRESIONE CUALQUIER TECLA Y CONTINUA")
deactivate UI_OcuparHabitacion
Conserje -> UI_OcuparHabitacion: Presiona cualquier tecla
activate UI_OcuparHabitacion

loop mientras se sigan cargando huespedes
  UI_OcuparHabitacion -> Conserje: mostrarPantallaSimilarGestionHuesped
  deactivate UI_OcuparHabitacion
  loop mientras el actor no presione "Buscar"
    Conserje -> UI_OcuparHabitacion: completar campos
    activate UI_OcuparHabitacion
    deactivate UI_OcuparHabitacion
  end
  Conserje -> UI_OcuparHabitacion: Buscar
  activate UI_OcuparHabitacion
  alt campos estan completos
    UI_OcuparHabitacion -> GestorHabitacion: getListaHuespedes(apellidoDTO, nombresDTO, tipodocDTO, nrodocDTO)
    activate GestorHabitacion
    GestorHabitacion -> HabitacionDAO: getListaHuespedes(apellidoDTO, nombresDTO, tipodocDTO, nrodocDTO)
    activate HabitacionDAO
  else no completa ningun campo
    UI_OcuparHabitacion -> GestorHabitacion: getListaHuespedes()
    activate GestorHabitacion
    GestorHabitacion -> HabitacionDAO: getListaHuespedes()
    activate HabitacionDAO
  end
HabitacionDAO -> GestorHabitacion: return(ListaHuespedes)
deactivate HabitacionDAO
deactivate HabitacionDAO
GestorHabitacion -> UI_OcuparHabitacion: return(ListaHuespedes)
deactivate GestorHabitacion
deactivate GestorHabitacion
UI_OcuparHabitacion -> Conserje: mostrarGrilla
deactivate UI_OcuparHabitacion
loop mientras no se oresione "ACEPTAR" habiendo seleccionado al menos un huesped
    Conserje -> UI_OcuparHabitacion: seleccionarHuespedes(ListaHuespedes)
    activate UI_OcuparHabitacion
    Conserje -> UI_OcuparHabitacion: ACEPTAR
    opt usuario presiona "ACEPTAR" sin especificar algun Huesped
      UI_OcuparHabitacion -> Conserje: mostrarGrilla
    end
    deactivate UI_OcuparHabitacion
end

activate UI_OcuparHabitacion
UI_OcuparHabitacion -> Conserje: mostrarBotones(“SEGUIR CARGANDO”, “CARGAR OTRA HABITACIÓN”, “SALIR”)
deactivate UI_OcuparHabitacion

opt usuario presiona "SEGUIR CARGANDO"
  Conserje -> UI_OcuparHabitacion: SEGUIR CARGANDO
  activate UI_OcuparHabitacion
  deactivate UI_OcuparHabitacion
end
end
alt usuario presiona "CARGAR OTRA HABITACION"
  Conserje -> UI_OcuparHabitacion: CARGAR OTRA HABITACION
  activate UI_OcuparHabitacion
  deactivate UI_OcuparHabitacion
else usuario presiona "SALIR"
  Conserje -> UI_OcuparHabitacion: SALIR
  activate UI_OcuparHabitacion
end
UI_OcuparHabitacion -> GestorEstadia: OcuparHabitacion(ListaHabitaciones)
deactivate UI_OcuparHabitacion
activate GestorEstadia
loop por cada habitacion en ListaHabitaciones
create EstadiaInst
GestorEstadia --> EstadiaInst: <<create>>
activate EstadiaInst
GestorEstadia -> EstadiaInst : setHuespedes(List<HuespedDTO>.nombre)
GestorEstadia -> EstadiaInst : setHoraCheckIn(hora_CheckIn)
GestorEstadia -> EstadiaInst : setPrecio(Precio)
GestorEstadia -> EstadiaInst : setHabitacion(Habitacion)
deactivate EstadiaInst
GestorEstadia -> EstadiaDAO : registrarEstadia(EstadiaInst)
activate EstadiaDAO
end
EstadiaDAO -> GestorEstadia : return()
deactivate EstadiaDAO
GestorEstadia -> UI_OcuparHabitacion
deactivate GestorEstadia
activate UI_OcuparHabitacion
end
UI_OcuparHabitacion -> Conserje: mostrarMensaje("Habitacion/es ocupada/s")
deactivate UI_OcuparHabitacion
@enduml